|smg
seg[0] <= shumaguan4:inst1.seg[0]
seg[1] <= shumaguan4:inst1.seg[1]
seg[2] <= shumaguan4:inst1.seg[2]
seg[3] <= shumaguan4:inst1.seg[3]
seg[4] <= shumaguan4:inst1.seg[4]
seg[5] <= shumaguan4:inst1.seg[5]
seg[6] <= shumaguan4:inst1.seg[6]
seg[7] <= shumaguan4:inst1.seg[7]
clkk => altpll0:inst.inclk0
segcs[0] <= shumaguan4:inst1.segcs[0]
segcs[1] <= shumaguan4:inst1.segcs[1]
segcs[2] <= shumaguan4:inst1.segcs[2]
segcs[3] <= shumaguan4:inst1.segcs[3]


|smg|shumaguan4:inst1
segcs[0] <= segcs_SIFNAL[0].DB_MAX_OUTPUT_PORT_TYPE
segcs[1] <= segcs_SIFNAL[1].DB_MAX_OUTPUT_PORT_TYPE
segcs[2] <= segcs_SIFNAL[2].DB_MAX_OUTPUT_PORT_TYPE
segcs[3] <= segcs_SIFNAL[3].DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <GND>
key => ~NO_FANOUT~
clk250hz => segcs_SIFNAL[0].CLK
clk250hz => segcs_SIFNAL[1].CLK
clk250hz => segcs_SIFNAL[2].CLK
clk250hz => segcs_SIFNAL[3].CLK
clk250hz => flag[0].CLK
clk250hz => flag[1].CLK


|smg|altpll0:inst
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|smg|altpll0:inst|altpll:altpll_component
inclk[0] => altpll0_altpll:auto_generated.inclk[0]
inclk[1] => altpll0_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => altpll0_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= altpll0_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|smg|altpll0:inst|altpll:altpll_component|altpll0_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


